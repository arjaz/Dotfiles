set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Roboto 9

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec konsole

# kill focused window
bindsym $mod+Shift+q kill

# disable focus followint mouse
focus_follows_mouse off

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# https://fontawesome.com/icons?d=gallery
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# layout
assign [class="TelegramDesktop"] $ws9

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# nord color scheme
set $bg-color            #2e3440
set $text-color          #d8dee9
set $bg-color-selected   #88c0d0
set $text-color-selected #d8dee9
set $bg-color-urgent     #bf616a
set $indicator-color     #88c0d0

# window styling
#                       border             background         text                 indicator
client.focused          $bg-color-selected $bg-color-selected $text-color-selected $indicator-color
client.unfocused        $bg-color          $bg-color          $text-color          $bg-color
client.focused_inactive $bg-color          $bg-color          $text-color          $bg-color
client.urgent $bg-color-urgent $bg-color-urgent $text-color $bg-color-urgent

# start polybar
exec_always --no-startup-id ~/.dotfiles/polybar_launch.sh

# start dmenu
bindsym $mod+d exec dmenu_run -p Run: -fn "Roboto:pixelsize=15" -nb "$bg-color" -nf "$text-color" -sb "$bg-color" -sf "$text-color"

# recommended gaps setting
set $gap_step 2

set $mode_gaps Gaps: (o)uter, (i)nner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus $gap_step
        bindsym minus gaps outer current minus $gap_step
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus $gap_step
        bindsym Shift+minus gaps outer all minus $gap_step
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus $gap_step
        bindsym minus gaps inner current minus $gap_step
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus $gap_step
        bindsym Shift+minus gaps inner all minus $gap_step
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

# basic gaps
set $bgaps 4

# set basic gaps
gaps inner $bgaps

# bind turn off gaps
bindsym $mod+g gaps inner all set 0

# bind set gaps to $bgaps
bindsym $mod+t gaps inner all set $bgaps

# set smart gaps on
smart_gaps on

# disable window titlebars
for_window [class="^.*"] border pixel 2
# default_border pixel 2

# set smart borders on
smart_borders no_gaps

# start nm-applet
exec --no-startup-id nm-applet --no-agent

# set background
exec --no-startup-id ~/.fehbg --restore

# start fcitx
exec --no-startup-id fcitx -d -r

# start blueman
exec --no-startup-id blueman-applet

# custom execs
bindsym $mod+F1 exec firefox
bindsym $mod+F2 exec telegram-desktop

# mpc bindings
bindsym XF86AudioPrev exec mpc prev
bindsym XF86AudioNext exec mpc next
bindsym XF86AudioPlay exec mpc toggle

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl -- set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl -- set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Sreen brightness controls
bindsym XF86MonBrightnessDown exec true &(pkexec /usr/bin/brillo -U 5)
bindsym XF86MonBrightnessUp exec true $(pkexec /usr/bin/brillo -A 5)

# escrotum binds
bindsym --release Print exec --no-startup-id escrotum "~/screenshots/screen-%Y-%m-%d-%T.png"
bindsym --release Ctrl+Print exec --no-startup-id escrotum -s "~/screenshots/screen-%Y-%m-%d-%T.png"

# i3lock bind
bindsym $mod+Escape exec i3lock -fo

# thunar bind
bindsym $mod+Shift+o exec thunar

# vifm bind
bindsym $mod+o exec konsole -e vifm

# ncmpcpp bind
bindsym $mod+m exec konsole -e ncmpcpp

# cava bind
bindsym $mod+Shift+m exec konsole -e cava

# pass bind
bindsym $mod+p exec passmenu

# pass bind
bindsym $mod+Shift+n exec networkmanager_dmenu

# load compton
exec compton -f
